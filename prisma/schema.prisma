generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
  // output        = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id               String  @id @default(uuid()) @map("_id")
  name             String?
  email            String? @unique
  password         String?
  image            String?
  role             Role    @default(USER)
  isTwoStepEnabled Boolean @default(false)
  Order            Order[]

  @@map("users")
}

model Table {
  id     String      @id @default(uuid()) @map("_id")
  number String      @unique
  status TableStatus @default(DISPO)
  orders Order[]
}

model Category {
  id       String    @id @default(uuid()) @map("_id")
  name     String
  products Product[]
}

model Product {
  id         String      @id @default(uuid()) @map("_id")
  nama       String
  price      Int
  categoryId String
  category   Category    @relation(fields: [categoryId], references: [id])
  active     Boolean     @default(true)
  items      OrderItem[]
}

model Order {
  id         String      @id @default(uuid()) @map("_id")
  tableId    String
  UserId     String
  status     OrderStatus @default(NEW)
  notes      String?
  createdAt  DateTime    @default(now())
  updateAt   DateTime    @updatedAt
  totalCents Int         @default(0)
  items      OrderItem[]
  table      Table       @relation(fields: [tableId], references: [id])
  waiter     User        @relation(fields: [UserId], references: [id])
}

enum OrderStatus {
  NEW
  IN_PROGRESS
  READY
  SERVERED
  CANCELED
}

enum TableStatus {
  DISPO
  INDISPO
}

model OrderItem {
  id        String  @id @default(uuid()) @map("_id")
  orderId   String
  productId String
  qty       Int
  unitCents Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
